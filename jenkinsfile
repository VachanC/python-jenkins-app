pipeline {
    agent {
        node { label 'docker' }  // Ensure a Jenkins agent with the 'docker' label exists
    }

    environment {
        PYTHON_IMAGE = 'python:3.9'  // Set Python Docker image version
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo 'Cloning repository...'
                checkout scm
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    echo 'Running inside Python Docker container...'
                    sh 'docker run --rm ${PYTHON_IMAGE} python3 --version'  // Check Python version inside Docker
                }
            }
        }

        stage('Run Python Script') {
            steps {
                script {
                    echo 'Executing Python application...'
                    sh 'docker run --rm -v $(pwd):/app -w /app ${PYTHON_IMAGE} python3 app.py'  // Replace 'app.py' with your script
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for errors.'
        }
    }
}
